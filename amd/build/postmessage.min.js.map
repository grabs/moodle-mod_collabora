{"version":3,"file":"postmessage.min.js","sources":["../src/postmessage.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Closes the collabora window.\n *\n * @module     mod_collabora/monitorclose\n * @author     Andreas Grabs <moodle@grabs-edv.de>\n * @copyright  2019 Humboldt-Universit√§t zu Berlin <moodle-support@cms.hu-berlin.de>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport fragment from 'core/fragment';\nimport templates from 'core/templates';\nimport ajax from 'core/ajax';\nimport notification from 'core/notification';\nimport log from 'core/log';\n\nexport const init = (opts) => {\n    var courseURL;\n    var collaboraUrl;\n    var destinationOrigin;\n    var asPopup;\n    var iframeid;\n    var versionviewer;\n    var id;\n    var contextid;\n    var version;\n    var strBack;\n    var imgBackUrl;\n    var uiMode;\n    var newVersion;\n    var versionManager;\n\n    courseURL = opts.courseurl;\n    collaboraUrl = opts.collaboraurl;\n    destinationOrigin = opts.destinationorigin;\n    asPopup = opts.aspopup;\n    iframeid = opts.iframeid;\n    id = opts.id;\n    contextid = opts.contextid;\n    strBack = opts.strback;\n    imgBackUrl = opts.imgbackurl;\n    uiMode = opts.uimode;\n    versionManager = opts.versionmanager;\n\n    // The version is \"0\" by default.\n    version = 0;\n    newVersion = 0;\n    setFrameData(collaboraUrl);\n\n    initModal();\n    versionviewer = document.getElementById(opts.versionviewerid);\n    window.addEventListener('message', receiveMessage);\n\n    /**\n     * Listener function for the event 'message'\n     * @param {Event} event\n     */\n    function receiveMessage(event) {\n        var msg, msgId;\n\n        log.debug('ReceiveMessage from ' + event.origin + ': ' + event.data);\n        if (typeof event.data !== 'string' && !(event.data instanceof String)) {\n            return;\n        }\n\n        msg = JSON.parse(event.data);\n        if (!msg) {\n            return;\n        }\n\n        msgId = msg.MessageId;\n\n        switch (msgId) {\n            // Messages sent by collabora editor.\n            case 'UI_Close':\n                closeDoc();\n                break;\n            case 'App_LoadingStatus':\n                tellPostmessageReady(msg);\n                break;\n            case 'UI_FileVersions':\n                showVersionView();\n                break;\n            case 'UI_Save':\n                invokeSave();\n                break;\n            case 'Clicked_Button':\n                handleCustomButton(msg);\n                break;\n            case 'App_VersionRestore':\n                restoreVersion(msg);\n                break;\n\n            // Messages sent by version viewer.\n            case 'SET_VERSION':\n                version = msg.Values.version;\n                setFrameData(collaboraUrl);\n                showVersionView();\n                break;\n            case 'RESTORE_VERSION':\n                prepareRestoreVersion(msg.Values.version);\n                break;\n        }\n    }\n\n    /**\n     * Close the document or go back to the course page, depending on the current view.\n     */\n    function closeDoc() {\n        if (asPopup) {\n            window.close();\n        } else {\n            window.location.href = courseURL;\n        }\n    }\n\n    /**\n     * Show the version_view page with all current versions.\n     */\n    function showVersionView() {\n        var serviceparams = {\n            'function' : 'version_viewer_content',\n            'id': id,\n            'version': version\n        };\n        fragment.loadFragment('mod_collabora', 'get_html', contextid, serviceparams).then(\n            function(html, js) {\n                $('#' + versionviewer.id).collapse('show');\n                let contentcontainer = document.querySelector('#' + versionviewer.id + ' .card-body');\n                contentcontainer.innerHTML = html;\n                if (js) {\n                    templates.runTemplateJS(js);\n                }\n            }\n        ).fail(notification.exception);\n\n    }\n\n    /**\n     * Invoke the save command.\n     * This is different to the default save action because we can prevent saving of unmodified documents\n     * which prevents creating new versions of the same document.\n     */\n    function invokeSave() {\n        var postObject = {\n            'MessageId': 'Action_Save',\n            'Values': {\n                'DontTerminateEdit': true,\n                'DontSaveIfUnmodified': true\n            }\n        };\n        postMessage(postObject);\n    }\n\n    /**\n     * Post the first message to collabora when the document is ready.\n     * @param {object} msg The received message object from the collabora editor.\n     */\n    function tellPostmessageReady(msg) {\n        if (msg.Values) {\n            if (msg.Values.Status == 'Document_Loaded') {\n\n                // Send the Host_PostMessageReady  before other posts (Mandatory)\n                var postObject = {\n                    'MessageId': 'Host_PostmessageReady'\n                };\n                postMessage(postObject);\n\n                // If newVersion is set, we have to tell the editor we want to restore to it.\n                if (newVersion != 0) {\n                    var postObject = {\n                        'MessageId': 'Host_VersionRestore',\n                        'Values': {\n                        'Status': 'Pre_Restore'\n                        }\n                    };\n                    postMessage(postObject);\n                    return;\n                }\n\n                // Disable the default save command to activate our own.\n                var postObject = {\n                    'MessageId': 'Disable_Default_UIAction',\n                    'Values': {\n                        'action': 'UI_Save',\n                        'disable': true\n                    }\n                };\n                postMessage(postObject);\n\n                // Disable the default save command to activate our own.\n                var postObject = {\n                    'MessageId': 'Action_ChangeUIMode',\n                    'Values': {\n                        'Mode': uiMode\n                    }\n                };\n                postMessage(postObject);\n\n                if (version > 0) {\n                    addBackButton();\n                }\n            }\n        }\n    }\n\n    function handleCustomButton(msg) {\n        if (msg.Values) {\n            if (msg.Values.Id == 'moodle_go_back') {\n                version = 0;\n                setFrameData(collaboraUrl);\n            }\n        }\n\n    }\n\n    function addBackButton() {\n        var postObject = {\n            'MessageId': 'Insert_Button',\n            'Values': {\n                'id': 'moodle_go_back',\n                'imgurl': imgBackUrl,\n                'label': strBack,\n                'hint': strBack\n            }\n        };\n        postMessage(postObject);\n    }\n\n    /**\n     * Send a message to the collabora editor\n     * @param {object} postObject The object we want to post.\n     */\n    function postMessage(postObject) {\n        postObject.SendTime = Date.now();\n        var message = JSON.stringify(postObject);\n        log.debug('Post message to collabora: ' + message);\n\n        var iframe = document.getElementById(iframeid);\n        iframe = iframe.contentWindow || (iframe.contentDocument.document || iframe.contentDocument);\n\n        iframe.postMessage(message, destinationOrigin);\n    }\n\n    function initModal() {\n        // Get the elements between which the iframe is moved back and forth.\n        const inlineelement = document.querySelector('#collabora-inline_' + id);\n        const modalelement = document.querySelector('#collaboramodal-body_' + id);\n        // Get the iframe container we move to one of the above defined elements.\n        const iframecontainer = document.querySelector('#iframe-container_' + id);\n\n        // Move the iframe to the modal element.\n        $(\"#collaboramodal_\" + id).on(\"show.bs.modal\", function() {\n            modalelement.append(iframecontainer);\n            $(\"body\").addClass(\"modal-open\");\n\n            setFrameData(collaboraUrl);\n        });\n\n        // Move the iframe to the inline element.\n        $(\"#collaboramodal_\" + id).on(\"hide.bs.modal\", function() {\n            inlineelement.append(iframecontainer);\n            $(\"body\").removeClass(\"modal-open\");\n            setFrameData(collaboraUrl);\n        });\n\n    }\n\n    function setFrameData() {\n        log.debug('Set iframe source: ' + collaboraUrl);\n\n        // Load the wopi_src params.\n        var serviceparams = {\n            'function' : 'wopi_src',\n            'id': id,\n            'version': version\n        };\n        fragment.loadFragment('mod_collabora', 'get_html', contextid, serviceparams).then(\n            function(strparams) {\n                var params = JSON.parse(strparams);\n\n                var form = document.createElement(\"form\");\n                form.method = \"get\";\n                form.action = collaboraUrl;\n                form.target = iframeid;\n                for (const [key, value] of Object.entries(params)) {\n                    var element = document.createElement(\"input\");\n                    element.type = \"hidden\";\n                    element.name = key;\n                    element.value = value;\n                    form.appendChild(element);\n                    log.debug('Add element ' + key + ': ' + value);\n                }\n                document.body.appendChild(form);\n\n                form.submit();\n                // form.remove();\n            }\n        ).fail(notification.exception);\n\n        return;\n    }\n\n    function prepareRestoreVersion(theNewVersion) {\n        version = 0; // Set version to the current document, so we can tell other users using this document.\n        newVersion = theNewVersion;\n        setFrameData(collaboraUrl);\n    }\n\n    function restoreVersion(msg) {\n        if (!versionManager) {\n            return;\n        }\n        if (msg.Values.Status == 'Pre_Restore_Ack') {\n            // Now we call the webservice with \"ajax.call\" and get an array of promises.\n            // Because we call only one service we only get one promise inside this array.\n            var myPromises = ajax.call([{ // Note: there is a Square bracket!\n                // The parameter methodname is the webservice we want to call.\n                methodname: 'mod_collabora_restore_version',\n                // The second one is a json object with all in the webservice defined parameters.\n                // The submitaction is needed to set the right action url in the mform.\n                args:{ id: id, version: newVersion }\n            }]);\n\n            // We only have one promise because we call only one webservice. More would be possible.\n            // So we just use promises[0].\n            myPromises[0].done(function(data) {\n                if (data.success == 1) {\n                    version = 0;\n                    newVersion = 0;\n                    setFrameData(collaboraUrl);\n\n                    showVersionView();\n                } else {\n                    notification.exception({message: data.failuremsg});\n                }\n            }).fail(notification.exception); // If any went wrong we let the user know.\n        }\n\n    }\n};\n"],"names":["opts","courseURL","collaboraUrl","destinationOrigin","asPopup","iframeid","versionviewer","id","contextid","version","strBack","imgBackUrl","uiMode","newVersion","versionManager","showVersionView","serviceparams","loadFragment","then","html","js","collapse","document","querySelector","innerHTML","runTemplateJS","fail","notification","exception","postMessage","postObject","SendTime","Date","now","message","JSON","stringify","debug","iframe","getElementById","contentWindow","contentDocument","setFrameData","strparams","params","parse","form","createElement","method","action","target","key","value","Object","entries","element","type","name","appendChild","body","submit","courseurl","collaboraurl","destinationorigin","aspopup","strback","imgbackurl","uimode","versionmanager","inlineelement","modalelement","iframecontainer","on","append","addClass","removeClass","initModal","versionviewerid","window","addEventListener","event","msg","origin","data","String","MessageId","close","location","href","Values","Status","tellPostmessageReady","Id","handleCustomButton","ajax","call","methodname","args","done","success","failuremsg","restoreVersion","theNewVersion"],"mappings":"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"}