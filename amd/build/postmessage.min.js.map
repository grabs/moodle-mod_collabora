{"version":3,"file":"postmessage.min.js","sources":["../src/postmessage.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Closes the collabora window.\n *\n * @module     mod_collabora/monitorclose\n * @author     Andreas Grabs <moodle@grabs-edv.de>\n * @copyright  2019 Humboldt-Universit√§t zu Berlin <moodle-support@cms.hu-berlin.de>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport fragment from 'core/fragment';\nimport templates from 'core/templates';\nimport notification from 'core/notification';\nimport log from 'core/log';\n\nexport const init = (opts) => {\n    var courseURL;\n    var collaboraUrl;\n    var destinationOrigin;\n    var asPopup;\n    var iframeid;\n    var versionviewer;\n    var id;\n    var contextid;\n    var version;\n\n    courseURL = opts.courseurl;\n    collaboraUrl = opts.collaboraurl;\n    destinationOrigin = opts.destinationorigin;\n    asPopup = opts.aspopup;\n    iframeid = opts.iframeid;\n    id = opts.id;\n    contextid = opts.contextid;\n    // version = 1704188035;\n    version = 0;\n    setFrameData(collaboraUrl);\n\n    initModal();\n    versionviewer = document.getElementById(opts.versionviewerid);\n    window.addEventListener('message', receiveMessage);\n\n    /**\n     * Listener function for the event 'message'\n     * @param {Event} event\n     */\n    function receiveMessage(event) {\n        var msg, msgId;\n\n        log.debug('ReceiveMessage from ' + event.origin + ': ' + event.data);\n        if (typeof event.data !== 'string' && !(event.data instanceof String)) {\n            return;\n        }\n\n        msg = JSON.parse(event.data);\n        if (!msg) {\n            return;\n        }\n\n        msgId = msg.MessageId;\n\n        switch (msgId) {\n            case 'UI_Close':\n                closeDoc();\n                break;\n            case 'App_LoadingStatus':\n                tellPostmessageReady(msg);\n                break;\n            case 'UI_FileVersions':\n                showVersionView();\n                break;\n            case 'UI_Save':\n                invokeSave();\n                break;\n            case 'SET_VERSION':\n                version = msg.Values.version;\n                setFrameData(collaboraUrl);\n        }\n    }\n\n    /**\n     * Clode the document or go back to the course page, depending on the current view.\n     */\n    function closeDoc() {\n        if (asPopup) {\n            window.close();\n        } else {\n            window.location.href = courseURL;\n        }\n    }\n\n    /**\n     * Show the version_view page with all current versions.\n     */\n    function showVersionView() {\n        var serviceparams = {\n            'function' : 'version_viewer_content',\n            'id': id\n        };\n        fragment.loadFragment('mod_collabora', 'get_html', contextid, serviceparams).then(\n            function(html, js) {\n                $('#' + versionviewer.id).collapse('show');\n                let contentcontainer = document.querySelector('#' + versionviewer.id + ' .card-body');\n                contentcontainer.innerHTML = html;\n                if (js) {\n                    templates.runTemplateJS(js);\n                }\n            }\n        ).fail(notification.exception);\n\n    }\n\n    /**\n     * Invoke the save command.\n     * This is different to the default save action because we can prevent saving of unmodified documents\n     * which prevents creating new versions of the same document.\n     */\n    function invokeSave() {\n        var postObject = {\n            'MessageId': 'Action_Save',\n            'Values': {\n                'DontTerminateEdit': true,\n                'DontSaveIfUnmodified': true\n            }\n        };\n        postMessage(postObject);\n    }\n\n    /**\n     * Post the first message to collabora when the document is ready.\n     * @param {object} msg The received message object from the collabora editor.\n     */\n    function tellPostmessageReady(msg) {\n        if (msg.Values) {\n            if (msg.Values.Status == 'Document_Loaded') {\n\n                // Send the Host_PostMessageReady  before other posts (Mandatory)\n                var postObject = {\n                    'MessageId': 'Host_PostmessageReady'\n                };\n                postMessage(postObject);\n\n                // Disable the default save command to activate our own.\n                var postObject = {\n                    'MessageId': 'Disable_Default_UIAction',\n                    'Values': {\n                        'action': 'UI_Save',\n                        'disable': true\n                    }\n                };\n                postMessage(postObject);\n            }\n        }\n    }\n\n    /**\n     * Send a message to the collabora editor\n     * @param {object} postObject The object we want to post.\n     */\n    function postMessage(postObject) {\n        postObject.SendTime = Date.now();\n        var message = JSON.stringify(postObject);\n        log.debug('Post message to collabora: ' + message);\n\n        var iframe = document.getElementById(iframeid);\n        iframe = iframe.contentWindow || (iframe.contentDocument.document || iframe.contentDocument);\n\n        iframe.postMessage(message, destinationOrigin);\n    }\n\n    function initModal() {\n        // Get the elements between which the iframe is moved back and forth.\n        const inlineelement = document.querySelector('#collabora-inline_' + id);\n        const modalelement = document.querySelector('#collaboramodal-body_' + id);\n        // Get the iframe container we move to one of the above defined elements.\n        const iframecontainer = document.querySelector('#iframe-container_' + id);\n\n        // Move the iframe to the modal element.\n        $(\"#collaboramodal_\" + id).on(\"show.bs.modal\", function() {\n            modalelement.append(iframecontainer);\n            $(\"body\").addClass(\"modal-open\");\n\n            setFrameData(collaboraUrl);\n        });\n\n        // Move the iframe to the inline element.\n        $(\"#collaboramodal_\" + id).on(\"hide.bs.modal\", function() {\n            inlineelement.append(iframecontainer);\n            $(\"body\").removeClass(\"modal-open\");\n            setFrameData(collaboraUrl);\n        });\n\n    }\n\n    function setFrameData() {\n        log.debug('Set iframe source: ' + collaboraUrl);\n\n        // Load the wopi_src params.\n        var serviceparams = {\n            'function' : 'wopi_src',\n            'id': id,\n            'version': version\n        };\n        fragment.loadFragment('mod_collabora', 'get_html', contextid, serviceparams).then(\n            function(strparams) {\n                var params = JSON.parse(strparams);\n\n                var form = document.createElement(\"form\");\n                form.method = \"get\";\n                form.action = collaboraUrl;\n                form.target = iframeid;\n                for (const [key, value] of Object.entries(params)) {\n                    var element = document.createElement(\"input\");\n                    element.type = \"hidden\";\n                    element.name = key;\n                    element.value = value;\n                    form.appendChild(element);\n                    log.debug('Add element ' + key + ': ' + value);\n                }\n                if (version > 0) {\n                    var element = document.createElement(\"input\");\n                    element.type = \"hidden\";\n                    element.name = 'permission';\n                    element.value = 'readonly';\n                    form.appendChild(element);\n                    log.debug('Add readonly element');\n                }\n                document.body.appendChild(form);\n\n                form.submit();\n                // form.remove();\n            }\n        ).fail(notification.exception);\n\n        return;\n    }\n};\n"],"names":["opts","courseURL","collaboraUrl","destinationOrigin","asPopup","iframeid","versionviewer","id","contextid","version","postMessage","postObject","SendTime","Date","now","message","JSON","stringify","debug","iframe","document","getElementById","contentWindow","contentDocument","setFrameData","serviceparams","loadFragment","then","strparams","params","parse","form","createElement","method","action","target","key","value","Object","entries","element","type","name","appendChild","body","submit","fail","notification","exception","courseurl","collaboraurl","destinationorigin","aspopup","inlineelement","querySelector","modalelement","iframecontainer","on","append","addClass","removeClass","initModal","versionviewerid","window","addEventListener","event","msg","origin","data","String","MessageId","close","location","href","Values","Status","tellPostmessageReady","html","js","collapse","innerHTML","runTemplateJS"],"mappings":";;;;;;;;wTA8BqBA,WACbC,UACAC,aACAC,kBACAC,QACAC,SACAC,cACAC,GACAC,UACAC,iBAsIKC,YAAYC,YACjBA,WAAWC,SAAWC,KAAKC,UACvBC,QAAUC,KAAKC,UAAUN,yBACzBO,MAAM,8BAAgCH,aAEtCI,OAASC,SAASC,eAAehB,WACrCc,OAASA,OAAOG,eAAkBH,OAAOI,gBAAgBH,UAAYD,OAAOI,iBAErEb,YAAYK,QAASZ,4BA2BvBqB,4BACDN,MAAM,sBAAwBhB,kBAG9BuB,cAAgB,UACH,cACPlB,WACKE,2BAENiB,aAAa,gBAAiB,WAAYlB,UAAWiB,eAAeE,MACzE,SAASC,eACDC,OAASb,KAAKc,MAAMF,WAEpBG,KAAOX,SAASY,cAAc,QAClCD,KAAKE,OAAS,MACdF,KAAKG,OAAShC,aACd6B,KAAKI,OAAS9B,aACT,MAAO+B,IAAKC,SAAUC,OAAOC,QAAQV,QAAS,KAC3CW,SAAAA,QAAUpB,SAASY,cAAc,UAC7BS,KAAO,SACfD,QAAQE,KAAON,IACfI,QAAQH,MAAQA,MAChBN,KAAKY,YAAYH,sBACbtB,MAAM,eAAiBkB,IAAM,KAAOC,OAExC5B,QAAU,KACN+B,QAAUpB,SAASY,cAAc,UAC7BS,KAAO,SACfD,QAAQE,KAAO,aACfF,QAAQH,MAAQ,WAChBN,KAAKY,YAAYH,sBACbtB,MAAM,yBAEdE,SAASwB,KAAKD,YAAYZ,MAE1BA,KAAKc,YAGXC,KAAKC,sBAAaC,WA7MxB/C,UAAYD,KAAKiD,UACjB/C,aAAeF,KAAKkD,aACpB/C,kBAAoBH,KAAKmD,kBACzB/C,QAAUJ,KAAKoD,QACf/C,SAAWL,KAAKK,SAChBE,GAAKP,KAAKO,GACVC,UAAYR,KAAKQ,UAEjBC,QAAU,EACVe,gCAwIU6B,cAAgBjC,SAASkC,cAAc,qBAAuB/C,IAC9DgD,aAAenC,SAASkC,cAAc,wBAA0B/C,IAEhEiD,gBAAkBpC,SAASkC,cAAc,qBAAuB/C,wBAGpE,mBAAqBA,IAAIkD,GAAG,iBAAiB,WAC3CF,aAAaG,OAAOF,qCAClB,QAAQG,SAAS,cAEnBnC,sCAIF,mBAAqBjB,IAAIkD,GAAG,iBAAiB,WAC3CJ,cAAcK,OAAOF,qCACnB,QAAQI,YAAY,cACtBpC,kBAvJRqC,GACAvD,cAAgBc,SAASC,eAAerB,KAAK8D,iBAC7CC,OAAOC,iBAAiB,oBAMAC,WAChBC,oBAEAhD,MAAM,uBAAyB+C,MAAME,OAAS,KAAOF,MAAMG,MACrC,iBAAfH,MAAMG,QAAuBH,MAAMG,gBAAgBC,oBAI9DH,IAAMlD,KAAKc,MAAMmC,MAAMG,qBAKfF,IAAII,eAGH,WAsBLlE,QACA2D,OAAOQ,QAEPR,OAAOS,SAASC,KAAOxE,oBAtBlB,8BAmEiBiE,QACtBA,IAAIQ,OAAQ,IACa,mBAArBR,IAAIQ,OAAOC,OAMXjE,YAHiB,WACA,0BAYjBA,YAPiB,WACA,kCACH,QACI,mBACC,MAjFnBkE,CAAqBV,eAEpB,kBA2BLzC,cAAgB,UACH,4BACPlB,sBAEDmB,aAAa,gBAAiB,WAAYlB,UAAWiB,eAAeE,MACzE,SAASkD,KAAMC,wBACT,IAAMxE,cAAcC,IAAIwE,SAAS,QACZ3D,SAASkC,cAAc,IAAMhD,cAAcC,GAAK,eACtDyE,UAAYH,KACzBC,uBACUG,cAAcH,OAGlChC,KAAKC,sBAAaC,qBArCX,UAsDTtC,YAPiB,WACA,qBACH,oBACe,wBACG,eAhDvB,cACDD,QAAUyD,IAAIQ,OAAOjE,QACrBe,mBAmBJC"}