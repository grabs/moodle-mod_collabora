{"version":3,"file":"postmessage.min.js","sources":["../src/postmessage.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Closes the collabora window.\n *\n * @module     mod_collabora/monitorclose\n * @author     Andreas Grabs <moodle@grabs-edv.de>\n * @copyright  2019 Humboldt-Universit√§t zu Berlin <moodle-support@cms.hu-berlin.de>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport fragment from 'core/fragment';\nimport templates from 'core/templates';\nimport ajax from 'core/ajax';\nimport notification from 'core/notification';\nimport log from 'core/log';\n\nclass postMessageHandler {\n    asPopup;\n    collaboraUrl;\n    component;\n    contextid;\n    courseURL;\n    id;\n    iframeid;\n    imgBackUrl;\n    isSaving;\n    newVersion;\n    originCollabora;\n    originMoodle;\n    strBack;\n    uiMode;\n    version;\n    versionManager;\n    versionViewer;\n    spinner;\n\n    constructor(opts) {\n        this.courseURL = opts.courseurl;\n        this.collaboraUrl = opts.collaboraurl;\n        if ('component' in opts) {\n            this.component = opts.component;\n        } else {\n            this.component = 'mod_collabora';\n        }\n        this.originCollabora = opts.origincollabora;\n        this.originMoodle = opts.originmoodle;\n        this.asPopup = opts.aspopup;\n        this.iframeid = opts.iframeid;\n        this.id = opts.id;\n        this.contextid = opts.contextid;\n        this.strBack = opts.strback;\n        this.imgBackUrl = opts.imgbackurl;\n        this.uiMode = opts.uimode;\n        this.versionManager = opts.versionmanager;\n        this.isSaving = false;\n\n        // The version is \"0\" by default.\n        this.version = 0;\n        this.newVersion = 0;\n\n        this.versionViewer = document.querySelector('#' + opts.versionviewerid);\n        this.spinner = document.querySelector('#collabora-spinner-' + this.id);\n    }\n\n    init() {\n        const _this = this;\n\n        _this.setFrameData();\n        _this.initModal();\n        // window.addEventListener('message', _this.receiveMessage, true);\n        window.addEventListener('message', function(e) {\n            _this.receiveMessage(e);\n        }.bind(_this));\n    }\n\n    /**\n     * Listener for the event 'message'\n     * @param {Event} event\n     */\n    receiveMessage(event) {\n        var msg, msgId;\n        const _this = this;\n\n        log.debug('ReceiveMessage from ' + event.origin + ': ' + event.data);\n        // We only handle messages from Moodle or Collabora!\n        if (event.origin != _this.originCollabora && event.origin != _this.originMoodle) {\n            log.debug('!!!!Received Message from wrong origin \"' + event.origin + '\"');\n            return;\n        }\n        if (typeof event.data !== 'string' && !(event.data instanceof String)) {\n            return;\n        }\n\n        msg = JSON.parse(event.data);\n        if (!msg) {\n            return;\n        }\n\n        msgId = msg.MessageId;\n\n        switch (msgId) {\n            // Messages sent by collabora editor.\n            case 'UI_Close':\n                _this.closeDocument();\n                break;\n            case 'App_LoadingStatus':\n                _this.tellPostmessageReady(msg);\n                break;\n            case 'UI_FileVersions':\n                _this.showVersionView();\n                break;\n            case 'UI_Save':\n                _this.invokeSave();\n                break;\n            case 'Doc_ModifiedStatus':\n                _this.checkSaved(msg);\n                break;\n            case 'Clicked_Button':\n                _this.handleCustomButton(msg);\n                break;\n            case 'App_VersionRestore':\n                _this.restoreVersion(msg);\n                break;\n\n            // Messages sent by version viewer.\n            case 'SET_VERSION':\n                _this.version = msg.Values.version;\n                _this.setFrameData();\n                _this.showVersionView();\n                break;\n            case 'RESTORE_VERSION':\n                _this.prepareRestoreVersion(msg.Values.version);\n                break;\n            case 'DELETE_VERSION':\n                _this.deleteVersion(msg.Values.version);\n                break;\n        }\n    }\n\n    /**\n     * Close the document or go back to the course page, depending on the current view.\n     */\n    closeDocument() {\n        const _this = this;\n\n        if (_this.asPopup) {\n            window.close();\n        } else {\n            window.location.href = _this.courseURL;\n        }\n    }\n\n    /**\n     * Show or hide an overlay spinner.\n     *\n     * @param {boolean} show\n     */\n    showSpinner(show) {\n        const _this = this;\n\n        var iframe = document.querySelector('#' + _this.iframeid);\n        if (show) {\n            _this.spinner.classList.remove('d-none');\n            iframe.style.opacity = 0.1;\n\n        } else {\n            _this.spinner.classList.add('d-none');\n            iframe.style.opacity = 1;\n        }\n    }\n\n    /**\n     * Show the version_view page with all current versions.\n     */\n    showVersionView() {\n        const _this = this;\n\n        _this.loadVersionView();\n        $('#' + _this.versionViewer.id).collapse('show');\n    }\n\n    /**\n     * Load the content for the version viewer.\n     */\n    loadVersionView() {\n        const _this = this;\n\n        if (!_this.versionManager) {\n            return;\n        }\n\n        const serviceparams = {\n            'function' : 'version_viewer_content',\n            'id': _this.id,\n            'version': _this.version\n        };\n\n        fragment.loadFragment(_this.component, 'get_html', _this.contextid, serviceparams).then(\n            function(html, js) {\n                let contentcontainer = document.querySelector('#' + _this.versionViewer.id + ' .card-body');\n                contentcontainer.innerHTML = html;\n                if (js) {\n                    templates.runTemplateJS(js);\n                }\n            }.bind(_this)\n        ).fail(notification.exception);\n    }\n\n    /**\n     * Invoke the save command.\n     * This is different to the default save action because we can prevent saving of unmodified documents\n     * which prevents creating new versions of the same document.\n     */\n    invokeSave() {\n        const _this = this;\n\n        _this.isSaving = true;\n\n        const postObject = {\n            'MessageId': 'Action_Save',\n            'Values': {\n                'DontTerminateEdit': true,\n                'DontSaveIfUnmodified': true\n            }\n        };\n        _this.postMessage(postObject);\n    }\n\n    /**\n     * Check saving has finished and reload version view if open.\n     * @param {object} msg The received message object from the collabora editor.\n     */\n    checkSaved(msg) {\n        const _this = this;\n\n        _this.isSaving = true;\n\n        if (msg.Values.Modified == false) {\n            if (_this.isSaving) {\n                _this.loadVersionView();\n            }\n        }\n    }\n\n    /**\n     * Post the first message to collabora when the document is ready.\n     * @param {object} msg The received message object from the collabora editor.\n     */\n    tellPostmessageReady(msg) {\n        const _this = this;\n\n        if (msg.Values) {\n            if (msg.Values.Status == 'Document_Loaded') {\n                var postObject;\n                // Send the Host_PostMessageReady  before other posts (Mandatory)\n                postObject = {\n                    'MessageId': 'Host_PostmessageReady'\n                };\n                _this.postMessage(postObject);\n\n                // If newVersion is set, we have to tell the editor we want to restore to it.\n                if (_this.newVersion != 0) {\n                    postObject = {\n                        'MessageId': 'Host_VersionRestore',\n                        'Values': {\n                        'Status': 'Pre_Restore'\n                        }\n                    };\n                    _this.postMessage(postObject);\n                    return;\n                }\n\n                // Disable the default save command to activate our own.\n                postObject = {\n                    'MessageId': 'Disable_Default_UIAction',\n                    'Values': {\n                        'action': 'UI_Save',\n                        'disable': true\n                    }\n                };\n                _this.postMessage(postObject);\n\n                // Set the ui mode (notebook or classic).\n                if (_this.uiMode != 0) {\n                    postObject = {\n                        'MessageId': 'Action_ChangeUIMode',\n                        'Values': {\n                            'Mode': _this.uiMode\n                        }\n                    };\n                    _this.postMessage(postObject);\n                }\n                // _this.spinner.classList.add('d-none');\n                _this.showSpinner(false);\n                if (_this.version > 0) {\n                    _this.addBackButton();\n                }\n            }\n        }\n    }\n\n    handleCustomButton(msg) {\n        const _this = this;\n\n        if (msg.Values) {\n            if (msg.Values.Id == 'moodle_go_back') {\n                _this.version = 0;\n                _this.setFrameData();\n            }\n        }\n\n    }\n\n    addBackButton() {\n        const _this = this;\n\n        var postObject = {\n            'MessageId': 'Insert_Button',\n            'Values': {\n                'id': 'moodle_go_back',\n                'imgurl': _this.imgBackUrl,\n                'label': _this.strBack,\n                'hint': _this.strBack\n            }\n        };\n        _this.postMessage(postObject);\n    }\n\n    /**\n     * Send a message to the collabora editor\n     * @param {object} postObject The object we want to post.\n     */\n    postMessage(postObject) {\n        const _this = this;\n\n        postObject.SendTime = Date.now();\n        var message = JSON.stringify(postObject);\n        log.debug('Post message to collabora: ' + message);\n\n        var iframe = document.querySelector('#' + _this.iframeid);\n        if (iframe === null || iframe == undefined) {\n            log.debug('The iframe \"' + _this.iframeid + '\" has vanished');\n            return;\n        }\n        iframe = iframe.contentWindow || (iframe.contentDocument.document || iframe.contentDocument);\n\n        iframe.postMessage(message, _this.originCollabora);\n    }\n\n    /**\n     * Prepare the modal feature to set the frameData while showing or hiding the modal.\n     */\n    initModal() {\n        const _this = this;\n\n        // Get the elements between which the iframe is moved back and forth.\n        const inlineelement = document.querySelector('#collabora-inline_' + _this.id);\n        const modalelement = document.querySelector('#collaboramodal-body_' + _this.id);\n        // Get the iframe container we move to one of the above defined elements.\n        const iframecontainer = document.querySelector('#iframe-container_' + _this.id);\n\n        // Move the iframe to the modal element.\n        $(\"#collaboramodal_\" + _this.id).on(\"show.bs.modal\", function() {\n            modalelement.append(iframecontainer);\n            $(\"body\").addClass(\"modal-open\");\n\n            _this.setFrameData();\n        }.bind(_this));\n\n        // Move the iframe to the inline element.\n        $(\"#collaboramodal_\" + _this.id).on(\"hide.bs.modal\", function() {\n            inlineelement.append(iframecontainer);\n            $(\"body\").removeClass(\"modal-open\");\n            _this.setFrameData();\n        }.bind(_this));\n\n    }\n\n    /**\n     * Set the Frame content by posting a temporary form to the iframe.\n     */\n    setFrameData() {\n        const _this = this;\n\n        log.debug('Set iframe source: ' + _this.collaboraUrl);\n\n        // Check whether there is an iframe we can post the form to.\n        var iframe = document.querySelector('#' + _this.iframeid);\n        if (iframe === null || iframe == undefined) {\n            log.debug('The iframe \"' + _this.iframeid + '\" has vanished');\n            return;\n        }\n\n        // Load the wopi_src params.\n        var serviceparams = {\n            'function' : 'wopi_src',\n            'id': _this.id,\n            'version': _this.version\n        };\n        fragment.loadFragment(_this.component, 'get_html', _this.contextid, serviceparams).then(\n            function(strparams) {\n                var params = JSON.parse(strparams);\n\n                var form = document.createElement(\"form\");\n                form.method = \"get\";\n                form.action = _this.collaboraUrl;\n                form.target = _this.iframeid;\n                for (const [key, value] of Object.entries(params)) {\n                    var element = document.createElement(\"input\");\n                    element.type = \"hidden\";\n                    element.name = key;\n                    element.value = value;\n                    form.appendChild(element);\n                    log.debug('Add element ' + key + ': ' + value);\n                }\n                document.body.appendChild(form);\n\n                form.submit();\n                // form.remove(); // Remove the form because it's only temporary used.\n            }.bind(_this)\n        ).fail(notification.exception);\n\n        return;\n    }\n\n    prepareRestoreVersion(version) {\n        const _this = this;\n\n        // _this.spinner.classList.remove('d-none');\n        _this.showSpinner(true);\n\n        _this.version = 0; // Set version to the current document, so we can tell other users using this document.\n        _this.newVersion = version;\n        _this.setFrameData();\n    }\n\n    restoreVersion(msg) {\n        const _this = this;\n\n        if (!_this.versionManager) {\n            _this.showSpinner(true);\n            return;\n        }\n        if (msg.Values.Status == 'Pre_Restore_Ack') {\n            // Now we call the webservice with \"ajax.call\" and get an array of promises.\n            // Because we call only one service we only get one promise inside this array.\n            var myPromises = ajax.call([{ // Note: there is a Square bracket!\n                // The parameter methodname is the webservice we want to call.\n                methodname: _this.component + '_restore_version',\n                // The second one is a json object with all in the webservice defined parameters.\n                // The submitaction is needed to set the right action url in the mform.\n                args:{ id: _this.id, version: _this.newVersion }\n            }]);\n\n            // We only have one promise because we call only one webservice. More would be possible.\n            // So we just use promises[0].\n            myPromises[0].done(function(data) {\n                if (data.success == 1) {\n                    _this.version = 0;\n                    _this.newVersion = 0;\n                    _this.setFrameData();\n\n                    _this.showVersionView();\n\n                } else {\n                    notification.exception({message: data.failuremsg});\n                }\n            }.bind(_this)).fail(notification.exception); // If any went wrong we let the user know.\n        }\n    }\n\n    deleteVersion(version) {\n        const _this = this;\n\n        if (!_this.versionManager) {\n            return;\n        }\n\n        // Now we call the webservice with \"ajax.call\" and get an array of promises.\n        // Because we call only one service we only get one promise inside this array.\n        var myPromises = ajax.call([{ // Note: there is a Square bracket!\n            // The parameter methodname is the webservice we want to call.\n            methodname: _this.component + '_delete_version',\n            // The second one is a json object with all in the webservice defined parameters.\n            // The submitaction is needed to set the right action url in the mform.\n            args:{ id: _this.id, version: version }\n        }]);\n\n        // We only have one promise because we call only one webservice. More would be possible.\n        // So we just use promises[0].\n        myPromises[0].done(function(data) {\n            if (data.success == 1) {\n                _this.showVersionView();\n            } else {\n                notification.exception({message: data.failuremsg});\n            }\n        }.bind(_this)).fail(notification.exception); // If any went wrong we let the user know.\n    }\n}\n\nexport const init = (opts) => {\n    const pm = new postMessageHandler(opts);\n    pm.init();\n};\n"],"names":["postMessageHandler","constructor","opts","courseURL","courseurl","collaboraUrl","collaboraurl","component","originCollabora","origincollabora","originMoodle","originmoodle","asPopup","aspopup","iframeid","id","contextid","strBack","strback","imgBackUrl","imgbackurl","uiMode","uimode","versionManager","versionmanager","isSaving","version","newVersion","versionViewer","document","querySelector","versionviewerid","spinner","this","init","_this","setFrameData","initModal","window","addEventListener","e","receiveMessage","bind","event","msg","debug","origin","data","String","JSON","parse","MessageId","closeDocument","tellPostmessageReady","showVersionView","invokeSave","checkSaved","handleCustomButton","restoreVersion","Values","prepareRestoreVersion","deleteVersion","close","location","href","showSpinner","show","iframe","classList","remove","style","opacity","add","loadVersionView","collapse","serviceparams","loadFragment","then","html","js","innerHTML","runTemplateJS","fail","notification","exception","postMessage","Modified","Status","postObject","addBackButton","Id","SendTime","Date","now","message","stringify","undefined","contentWindow","contentDocument","inlineelement","modalelement","iframecontainer","on","append","addClass","removeClass","strparams","params","form","createElement","method","action","target","key","value","Object","entries","element","type","name","appendChild","body","submit","ajax","call","methodname","args","done","success","failuremsg"],"mappings":"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"}